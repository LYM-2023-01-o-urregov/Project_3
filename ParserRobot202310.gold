using gold.**

toSet(C) :=  {x|  x in C}

///====   mini Parser===

function createParser(A):IPushdownAutomaton begin
	Q:={";",";B","C0","C1","In","[p","do","if","|o",":;]",":as",":cd",":fa",":go",":ir",":mj",":pu",":rp",":tu","Pro","Rbt","Var","[/|","]BF","ass","c/;","cas","cnd","com","cpu","do1","fac","got","id0","id1","if1","jir","jtt","mir","mov","mtt","nas","ngo","nir","nmj","nop","npu","nrp","pc:","pcc","pco","pik","put","rpt","the","tur","whi",":as1",":cd1",":fa1",":fac",":go1",":ir1",":irc",":mj1",":mjc",":pu1",":puc",":rp1",":tu1",":tuc","ass1","c/;1","cas1","cnd1","cpu1","cpuc","else","fac1","facc","got1","idp0","idp1","idp2","jir1","jirc","jtt1","jttc","mir1","mirc","mov1","mtt1","mttc","nas1","ngo1","nir1","nirc","nmj1","nmjc","nop1","nopc","npu1","npuc","nrp1","pc:1","pcc1","pcid","pik1","pikc","put1","putc","rpt1","the1","tur1","whi1",":fac1",":irc1",":mjc1",":puc1",":tuc1","cpuc1","facc1","jirc1","jttc1","mirc1","mttc1","nirc1","nmjc1","nopc1","npuc1","pcid1","pcid2","pid11","pikc1","putc1","pcid11","pcid21"}
	Σ:=toSet(A)  //∪ {' ', '\n'}
	
	Γ:={"[","t","w","|"}
	q₀:="In"
	F:= {"]BF"}
	M:=GPushdownAutomaton(Q,Σ,Γ,q₀,F)
//SkipChars := {' ', '\n'}   // this will only  be used when testing only the parser as the lexer removes  SkipChars
	
M.delta(";","Pro","P").ignore()
M.delta(";","[/|","[").push("[")

M.delta(";B","if1","I").ignore()
M.delta(";B","ass1","a").ignore()
M.delta(";B","fac1","f").ignore()
M.delta(";B","got1","g").ignore()
M.delta(";B","jir1","J").ignore()
M.delta(";B","jtt1","j").ignore()
M.delta(";B","mir1","o").ignore()
M.delta(";B","mov1","m").ignore()
M.delta(";B","mtt1","M").ignore()
M.delta(";B","nop1","n").ignore()
M.delta(";B","pik1","i").ignore()
M.delta(";B","put1","p").ignore()
M.delta(";B","rpt1","r").ignore()
M.delta(";B","tur1","t").ignore()
M.delta(";B","whi1","W").push("w")
M.delta(";B","pid11","v").ignore()

M.delta("C0",";B",";").ignore()
M.delta("C0","]BF","]").pop("[")

M.delta("C1",";B",";").ignore()
M.delta("C1","]BF","]").pop("[")

M.delta("In","Rbt","R").ignore()

M.delta("[p","|o","|").push("|")

M.delta("do",":;]",":").ignore()

M.delta("if",":cd",":").ignore()

M.delta("|o","[/|","|").pop("|")
M.delta("|o","idp1","v").ignore()

M.delta(":;]","[/|","[").push("[")

M.delta(":as","nas","#").ignore()

M.delta(":cd","facc","F").ignore()
M.delta(":cd","jirc","G").ignore()
M.delta(":cd","jttc","H").ignore()
M.delta(":cd","mirc","d").ignore()
M.delta(":cd","mttc","h").ignore()
M.delta(":cd","nopc","O").ignore()
M.delta(":cd","pikc","k").ignore()
M.delta(":cd","putc","c").ignore()

M.delta(":fa","C0","Z").ignore()

M.delta(":go","ngo","#").ignore()
M.delta(":go","ngo","v").ignore()

M.delta(":ir","nir","#").ignore()
M.delta(":ir","nir","v").ignore()

M.delta(":mj","nmj","#").ignore()
M.delta(":mj","nmj","v").ignore()

M.delta(":pu","npu","#").ignore()
M.delta(":pu","npu","v").ignore()

M.delta(":rp","nrp","#").ignore()
M.delta(":rp","nrp","v").ignore()

M.delta(":tu","C0","A").ignore()

M.delta("Pro","idp0","v").ignore()

M.delta("Rbt","Pro","P").ignore()
M.delta("Rbt","Var","V").ignore()
M.delta("Rbt","[/|","[").push("[")

M.delta("Var","id0","v").ignore()

M.delta("[/|","if","I").ignore()
M.delta("[/|","]BF","]").pop("[")
M.delta("[/|","ass","a").ignore()
M.delta("[/|","fac","f").ignore()
M.delta("[/|","got","g").ignore()
M.delta("[/|","jir","J").ignore()
M.delta("[/|","jtt","j").ignore()
M.delta("[/|","mir","o").ignore()
M.delta("[/|","mov","m").ignore()
M.delta("[/|","mtt","M").ignore()
M.delta("[/|","nop","n").ignore()
M.delta("[/|","pik","i").ignore()
M.delta("[/|","put","p").ignore()
M.delta("[/|","rpt","r").ignore()
M.delta("[/|","tur","t").ignore()
M.delta("[/|","whi","W").push("w")
M.delta("[/|","pcid","v").ignore()

M.delta("]BF",";B",";").ignore()
M.delta("]BF",":;]","]").pop("[")
M.delta("]BF","[/|","[").push("[")
M.delta("]BF","]BF","]").pop("[")
M.delta("]BF","else","E").pop("t")
M.delta("]BF","idp0","v").ignore()

M.delta("ass",":as",":").ignore()

M.delta("c/;","C0","#").ignore()
M.delta("c/;","C0","v").ignore()

M.delta("cas","C0","v").ignore()

M.delta("cnd","do","D").pop("w")
M.delta("cnd","the","T").push("t")

M.delta("com","id1","v").ignore()

M.delta("cpu","C0","X").ignore()

M.delta("do1",":;]",":").ignore()

M.delta("fac",":fa",":").ignore()

M.delta("got",":go",":").ignore()

M.delta("id0",";",";").ignore()
M.delta("id0","com",",").ignore()

M.delta("id1",";",";").ignore()
M.delta("id1","com",",").ignore()

M.delta("if1",":cd1",":").ignore()

M.delta("jir",":ir",":").ignore()

M.delta("jtt",":mj",":").ignore()

M.delta("mir",":ir",":").ignore()

M.delta("mov","c/;",":").ignore()

M.delta("mtt",":mj",":").ignore()

M.delta("nas","cas",",").ignore()

M.delta("ngo","c/;",",").ignore()

M.delta("nir",":fa",",").ignore()

M.delta("nmj",":tu",",").ignore()

M.delta("nop","C0",":").ignore()

M.delta("npu","cpu",",").ignore()

M.delta("nrp","[/|","[").push("[")

M.delta("pc:","C0","#").ignore()
M.delta("pc:","C0","v").ignore()
M.delta("pc:","pcid1","#").ignore()
M.delta("pc:","pcid1","v").ignore()

M.delta("pcc","C0","#").ignore()
M.delta("pcc","C0","v").ignore()
M.delta("pcc","pcid2","#").ignore()
M.delta("pcc","pcid2","v").ignore()

M.delta("pco","idp2","v").ignore()

M.delta("pik",":pu",":").ignore()

M.delta("put",":pu",":").ignore()

M.delta("rpt",":rp",":").ignore()

M.delta("the",":;]",":").ignore()

M.delta("tur",":tu",":").ignore()

M.delta("whi",":cd",":").ignore()

M.delta(":as1","nas1","#").ignore()

M.delta(":cd1","facc1","F").ignore()
M.delta(":cd1","jirc1","G").ignore()
M.delta(":cd1","jttc1","H").ignore()
M.delta(":cd1","mirc1","d").ignore()
M.delta(":cd1","mttc1","h").ignore()
M.delta(":cd1","nopc1","O").ignore()
M.delta(":cd1","pikc1","k").ignore()
M.delta(":cd1","putc1","c").ignore()

M.delta(":fa1","C1","Z").ignore()

M.delta(":fac","cnd","Z").ignore()

M.delta(":go1","ngo1","#").ignore()
M.delta(":go1","ngo1","v").ignore()

M.delta(":ir1","nir1","#").ignore()
M.delta(":ir1","nir1","v").ignore()

M.delta(":irc","nirc","#").ignore()
M.delta(":irc","nirc","v").ignore()

M.delta(":mj1","nmj1","#").ignore()
M.delta(":mj1","nmj1","v").ignore()

M.delta(":mjc","nmjc","#").ignore()
M.delta(":mjc","nmjc","v").ignore()

M.delta(":pu1","npu1","#").ignore()
M.delta(":pu1","npu1","v").ignore()

M.delta(":puc","npuc","#").ignore()
M.delta(":puc","npuc","v").ignore()

M.delta(":rp1","nrp1","#").ignore()
M.delta(":rp1","nrp1","v").ignore()

M.delta(":tu1","C1","A").ignore()

M.delta(":tuc","cnd","A").ignore()

M.delta("ass1",":as1",":").ignore()

M.delta("c/;1","C1","#").ignore()
M.delta("c/;1","C1","v").ignore()

M.delta("cas1","C1","v").ignore()

M.delta("cnd1","do1","D").pop("w")
M.delta("cnd1","the1","T").push("t")

M.delta("cpu1","C1","X").ignore()

M.delta("cpuc","cnd","X").ignore()

M.delta("else",":;]",":").ignore()

M.delta("fac1",":fa1",":").ignore()

M.delta("facc",":fac",":").ignore()

M.delta("got1",":go1",":").ignore()

M.delta("idp0","[p","[").push("[")

M.delta("idp1","[/|","|").pop("|")
M.delta("idp1","pco",",").ignore()

M.delta("idp2","[/|","|").pop("|")
M.delta("idp2","pco",",").ignore()

M.delta("jir1",":ir1",":").ignore()

M.delta("jirc",":irc",":").ignore()

M.delta("jtt1",":mj1",":").ignore()

M.delta("jttc",":mjc",":").ignore()

M.delta("mir1",":ir1",":").ignore()

M.delta("mirc",":irc",":").ignore()

M.delta("mov1","c/;1",":").ignore()

M.delta("mtt1",":mj1",":").ignore()

M.delta("mttc",":mjc",":").ignore()

M.delta("nas1","cas1",",").ignore()

M.delta("ngo1","c/;1",",").ignore()

M.delta("nir1",":fa1",",").ignore()

M.delta("nirc",":fac",",").ignore()

M.delta("nmj1",":tu1",",").ignore()

M.delta("nmjc",":tuc",",").ignore()

M.delta("nop1","C1",":").ignore()

M.delta("nopc","cnd",":").ignore()

M.delta("npu1","cpu1",",").ignore()

M.delta("npuc","cpuc",",").ignore()

M.delta("nrp1","[/|","[").push("[")

M.delta("pc:1","C1","#").ignore()
M.delta("pc:1","C1","v").ignore()
M.delta("pc:1","pcid11","#").ignore()
M.delta("pc:1","pcid11","v").ignore()

M.delta("pcc1","C1","#").ignore()
M.delta("pcc1","C1","v").ignore()
M.delta("pcc1","pcid21","#").ignore()
M.delta("pcc1","pcid21","v").ignore()

M.delta("pcid","C0",":").ignore()
M.delta("pcid","pc:",":").ignore()

M.delta("pik1",":pu1",":").ignore()

M.delta("pikc",":puc",":").ignore()

M.delta("put1",":pu1",":").ignore()

M.delta("putc",":puc",":").ignore()

M.delta("rpt1",":rp1",":").ignore()

M.delta("the1",":;]",":").ignore()

M.delta("tur1",":tu1",":").ignore()

M.delta("whi1",":cd1",":").ignore()

M.delta(":fac1","cnd1",'Z').ignore()

M.delta(":irc1","nirc1",'#').ignore()
M.delta(":irc1","nirc1",'v').ignore()

M.delta(":mjc1","nmjc1",'#').ignore()
M.delta(":mjc1","nmjc1",'v').ignore()

M.delta(":puc1","npuc1",'#').ignore()
M.delta(":puc1","npuc1",'v').ignore()

M.delta(":tuc1","cnd1",'A').ignore()

M.delta("cpuc1","cnd1",'X').ignore()

M.delta("facc1",":fac1",':').ignore()

M.delta("jirc1",":irc1",':').ignore()
M.delta("jttc1",":mjc1",':').ignore()

M.delta("mirc1",":irc1",':').ignore()
M.delta("mttc1",":mjc1",':').ignore()

M.delta("nirc1",":fac1",',').ignore()

M.delta("nmjc1",":tuc1",',').ignore()

M.delta("nopc1","cnd1",':').ignore()
M.delta("npuc1","cpuc1",',').ignore()

M.delta("pcid1","pcc",',').ignore()

M.delta("pcid2","C0",'#').ignore()
M.delta("pcid2","C0",'v').ignore()
M.delta("pcid2","pcc",',').ignore()

M.delta("pid11","C1",':').ignore()
M.delta("pid11","pc:1",':').ignore()

M.delta("pikc1",":puc1",':').ignore()

M.delta("putc1",":puc1",':').ignore()

M.delta("pcid11","pcc1",',').ignore()


M.delta("pcid21","C1",'#').ignore()
M.delta("pcid21","C1",'v').ignore()
M.delta("pcid21","pcc1",',').ignore()


//for each q in Q do
// 	for each s in SkipChars do
//M.delta(q,q,λ+s).ignore()
// end
// end


return M
end
